syntax = "proto3";
option go_package = "github.com/tritonuas/gcs/internal/protos";

/**
 * Represents the possibe target objects. 
 * enum has to start with 0.
 * (KEEP)
 */
enum ODLCObjects {
    Undefined = 0;
    Mannequin = 1;
    Tent = 2;
}

/ **
 * Represents the Airdrop IDs
 * Old name: AirdropType
 */
enum AirdropType {
    Undefined = 0;
    Water = 1;
    Beacon = 2;
}

/**
 * Represents a Bottle/Aidrop Object 
 * Old name: Bottle
 */
message Airdrop {
	AirdropType Index = 1;  // Unique ID 
    ODLCObjects Object = 2;     // Unique Target
}

/**
 * Represents a Bottle DROP ?
 * refer to /dropnow but it seems to be used for testing the airdrop. 
 * Takes in an bottle index to be manually dropped for testing purposes
 * Don't touch unless you want to break stuff
 */
message AirdropSwap {
	AirdropType index = 1;
}

/**
 * Represents GPS Coordinates 
 */
message GPSCoord {
    double Latitude = 1;
    double Longitude = 2;
    double Altitude = 3;
}

/**
 * Represents the Mission Object; Mainly used for Mission initalization.
 * Renamed BottleAssignments to AirdropAssignments

    Note: AirdropBoundary must follow ordering: Bottom left, Bottom right, Top right, Top left
 */
message Mission {
    repeated GPSCoord FlightBoundary = 1;
    repeated GPSCoord AirdropBoundary = 2;
    repeated GPSCoord Waypoints = 3;
    repeated Airdrop AirdropAssignments = 4;
    repeated GPSCoord MappingBoundary = 5;
    repeated GPSCoord DropLocation = 6;
}

/**
 * Represents data encoded for the ACTUAL airdrops. 
 * Check post/targets/locations 
 * (MODIFY)
 */
message AirdropTarget {
    AirdropType Index = 1;
    GPSCoord Coordinate = 2;
    ODLCObjects Object = 3;
}

/**
 * Bounding boxes for each target
 */
message BboxProto { 
    int32 x1 = 1;
    int32 y1 = 2;
    int32 x2 = 3;
    int32 y2 = 4;
}

/**
 * Represents the CV Data sent down for matching/manual intervention.
 */
message IdentifiedTarget {
    int32 run_id = 1;
    string Picture = 2;
    repeated GPSCoord coordinates = 3;
    repeated BboxProto bboxes = 4;
}

/**
 * Represents the results of manual CV matching
 * NOTE / TODO:
            ok so these protobuf messages should really be refactored a bit
            currently the MatchedTarget protobuf message contains both a Bottle and
            IdentifiedTarget, which in theory seems fine but gets annoying because
            now to make the message to send down here we have to construct an entire IdentifiedTarget
            struct and then send that down, when really we should only need to send the id
            down because all of the IdentifiedTarget information should have been sent
            in the GET /targets/all endpoint

            - tyler (old lead)
 */
message MatchedTarget {
    Airdrop Airdrop = 1;          // Airdrop ID
    ODLCObjects Object = 2;     // associated object
}

/**
 * Represents the connectivity of elements in the OBC. 
 * (Keep)
 */
message OBCConnInfo {
    bool mav_rc_good = 1;
    float mav_rc_strength = 2;
    bool camera_good = 3;
    repeated int32 ms_since_ad_heartbeat = 4;
    repeated AirdropType dropped_airdrop_idx = 5;
}

/**
 * This is used for testing, skipping over the logic and querying an image from the client.
 */
message ManualImage {
    string img_b64 = 1;
    double lat_deg = 2;
    double lng_deg = 3;
    double alt_agl_m = 4;
    double airspeed_m_s = 5;
    double heading_deg = 6;
    double yaw_deg = 7;
    double pitch_deg = 8;
    double roll_deg = 9;
    int32 timestamp = 10;
}

/**
 * As far as I can tell, this isn't used anywhere. Might be wrong
 */
message ManualTargetMatch {
    int32 airdrop_a_id = 1;
    int32 airdrop_b_id = 2;
    int32 airdrop_c_id = 3;
    int32 airdrop_d_id = 4;
}
